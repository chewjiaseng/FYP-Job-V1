{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      file: null,\n      message: '',\n      predictedCategory: '',\n      recommendedJob: '',\n      users: []\n    };\n  },\n  methods: {\n    onFileChange(event) {\n      this.file = event.target.files[0];\n    },\n    async submitResume() {\n      if (!this.file) {\n        this.message = \"Please upload a file.\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append('resume', this.file);\n      try {\n        const response = await axios.post('/pred', formData);\n        this.predictedCategory = response.data.predicted_category;\n        this.recommendedJob = response.data.recommended_job;\n        this.message = response.data.message || '';\n      } catch (error) {\n        this.message = \"Error uploading file. Please try again.\";\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get('/users');\n        this.users = response.data.users;\n      } catch (error) {\n        this.message = \"Error fetching users.\";\n      }\n    }\n  },\n  mounted() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","data","file","message","predictedCategory","recommendedJob","users","methods","onFileChange","event","target","files","submitResume","formData","FormData","append","response","post","predicted_category","recommended_job","error","fetchUsers","get","mounted"],"sources":["D:\\UPM registration\\fyp local path github\\FYP-Job-V1\\frontend\\my-vue-app\\src\\components\\ResumeForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"resume-form\">\r\n      <div class=\"container\" style=\"margin-top:20px;background:#013a5c;color:white;\">\r\n        <h1 class=\"text center\">Resume Screening AI Base System</h1>\r\n        <p>This system supports TXT and PDF files to be uploaded and will work on the following:</p>\r\n        <ul>\r\n          <li>Resume Categorization</li>\r\n          <li>Resume Job Recommendation</li>\r\n        </ul>\r\n      </div>\r\n  \r\n      <div class=\"container\" style=\"background:#013a5c;color:white;\">\r\n        <h2>Upload Your Resume</h2>\r\n        <form @submit.prevent=\"submitResume\">\r\n          <input type=\"file\" @change=\"onFileChange\" required>\r\n          <input type=\"submit\" value=\"Submit\">\r\n        </form>\r\n  \r\n        <p v-if=\"message\" class=\"text-center\">{{ message }}</p>\r\n        <div v-if=\"predictedCategory\">\r\n          <br><hr><br>\r\n          <p class=\"text-center\"><b><strong>Category:</strong></b> {{ predictedCategory }}</p>\r\n          <p class=\"text-center\"><b><strong>Recommended Job:</strong></b> {{ recommendedJob }}</p>\r\n          <br><hr><br>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"container\" style=\"background:#013a5c;color:white;\">\r\n        <h2>User List</h2>\r\n        <table>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n          </tr>\r\n          <tr v-for=\"user in users\" :key=\"user.id\">\r\n            <td>{{ user.id }}</td>\r\n            <td>{{ user.name }}</td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        file: null,\r\n        message: '',\r\n        predictedCategory: '',\r\n        recommendedJob: '',\r\n        users: [],\r\n      };\r\n    },\r\n    methods: {\r\n      onFileChange(event) {\r\n        this.file = event.target.files[0];\r\n      },\r\n      async submitResume() {\r\n        if (!this.file) {\r\n          this.message = \"Please upload a file.\";\r\n          return;\r\n        }\r\n  \r\n        const formData = new FormData();\r\n        formData.append('resume', this.file);\r\n  \r\n        try {\r\n          const response = await axios.post('/pred', formData);\r\n          this.predictedCategory = response.data.predicted_category;\r\n          this.recommendedJob = response.data.recommended_job;\r\n          this.message = response.data.message || '';\r\n        } catch (error) {\r\n          this.message = \"Error uploading file. Please try again.\";\r\n        }\r\n      },\r\n      async fetchUsers() {\r\n        try {\r\n          const response = await axios.get('/users');\r\n          this.users = response.data.users;\r\n        } catch (error) {\r\n          this.message = \"Error fetching users.\";\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      this.fetchUsers();\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Add your custom styles here */\r\n  </style>\r\n  "],"mappings":"AA4CE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,EAAE;MACXC,iBAAiB,EAAE,EAAE;MACrBC,cAAc,EAAE,EAAE;MAClBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,KAAK,EAAE;MAClB,IAAI,CAACP,IAAG,GAAIO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACV,IAAI,EAAE;QACd,IAAI,CAACC,OAAM,GAAI,uBAAuB;QACtC;MACF;MAEA,MAAMU,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACb,IAAI,CAAC;MAEpC,IAAI;QACF,MAAMc,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAC,OAAO,EAAEJ,QAAQ,CAAC;QACpD,IAAI,CAACT,iBAAgB,GAAIY,QAAQ,CAACf,IAAI,CAACiB,kBAAkB;QACzD,IAAI,CAACb,cAAa,GAAIW,QAAQ,CAACf,IAAI,CAACkB,eAAe;QACnD,IAAI,CAAChB,OAAM,GAAIa,QAAQ,CAACf,IAAI,CAACE,OAAM,IAAK,EAAE;MAC5C,EAAE,OAAOiB,KAAK,EAAE;QACd,IAAI,CAACjB,OAAM,GAAI,yCAAyC;MAC1D;IACF,CAAC;IACD,MAAMkB,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAML,QAAO,GAAI,MAAMhB,KAAK,CAACsB,GAAG,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAChB,KAAI,GAAIU,QAAQ,CAACf,IAAI,CAACK,KAAK;MAClC,EAAE,OAAOc,KAAK,EAAE;QACd,IAAI,CAACjB,OAAM,GAAI,uBAAuB;MACxC;IACF;EACF,CAAC;EACDoB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}